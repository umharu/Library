import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.lang.model.SourceVersion;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Maximiliano
 */
public class Biblioteca extends javax.swing.JFrame {

    private DAO dao;
    /**
     * Creates new form NewJFrame
     */
    public Biblioteca() {
        
        
        try {
            initComponents();
            bloquearBotones();
            String dburl = "C:\\Users\\Maximiliano\\Documents\\db_prueba\\biblioteca.db";
            dao = new DAO(dburl);
        } catch (Exception ex) {
            Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Titulo = new javax.swing.JTextField();
        Autor = new javax.swing.JTextField();
        Alta_libro = new javax.swing.JButton();
        Buscar_libro = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        Borrar_libro = new javax.swing.JButton();
        Examinar = new javax.swing.JButton();
        Archivo = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        Cancelar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Precio = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Biblioteca");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Titulo");

        jLabel2.setText("Autor");

        Titulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TituloActionPerformed(evt);
            }
        });

        Autor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutorActionPerformed(evt);
            }
        });

        Alta_libro.setText("Alta libro");
        Alta_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Alta_libroActionPerformed(evt);
            }
        });

        Buscar_libro.setText("Buscar libro");
        Buscar_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Buscar_libroActionPerformed(evt);
            }
        });

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        Borrar_libro.setText("Borrar libro");
        Borrar_libro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Borrar_libroActionPerformed(evt);
            }
        });

        Examinar.setText("Examinar");
        Examinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExaminarActionPerformed(evt);
            }
        });

        Archivo.setText("Archivo");

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        jLabel3.setText("Precio");

        Precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrecioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Archivo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Precio, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Titulo, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                                .addComponent(Autor)))))
                .addGap(6, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Examinar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Borrar_libro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Buscar_libro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Alta_libro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Alta_libro))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Autor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(Buscar_libro)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(Modificar)
                .addGap(18, 18, 18)
                .addComponent(Borrar_libro)
                .addGap(18, 18, 18)
                .addComponent(Cancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Archivo)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Examinar))
                .addGap(86, 86, 86))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TituloActionPerformed

    private void AutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AutorActionPerformed

    private void Alta_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Alta_libroActionPerformed
            Libro libro = new Libro();
            double precio;
           
    if (dao==null){
        JOptionPane.showMessageDialog(this,"Debe abrir una base de datos.");
        return;
    }
    try {
        libro.setTitulo(Titulo.getText());
        libro.setAutor(Autor.getText());
        dao.altaLibro(libro);
        JOptionPane.showMessageDialog(this, "Libro agregado correctamente.");
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error al agregar el libro: " + ex.getMessage());
        return;
    }
    try{
    precio = Double.valueOf(Precio.getText());
    } catch (Exception ex){
        JOptionPane.showMessageDialog(this, "El precio debe ser un numero");
        return;
        
    }
        try {
            libro.setPrecio(precio);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return;
        }
    
    JOptionPane.showMessageDialog(this, "El libro ha sido guardado.");
    borrarCampos();
    
    }//GEN-LAST:event_Alta_libroActionPerformed

    private void Borrar_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Borrar_libroActionPerformed
       String titulo;
       if (dao==null){
        JOptionPane.showMessageDialog(this,"Debe abrir una base de datos.");
        return;
        }
       titulo = Titulo.getText();
       if(titulo.isEmpty()){
       JOptionPane.showMessageDialog(this,"Debe ingresar un titulo.");
       return;
       }
        try {
            dao.eliminarLibro(titulo);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return;
        }
        JOptionPane.showMessageDialog(this,"El libro fue eliminado con exito.");
        borrarCampos();
        bloquearBotones();
    }//GEN-LAST:event_Borrar_libroActionPerformed

    private void ExaminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExaminarActionPerformed
    JFileChooser selector = new JFileChooser();
    int respuesta = selector.showOpenDialog(this);

    if (respuesta == JFileChooser.CANCEL_OPTION) {
        return;
    }

    String rutaArchivo;
    try {
    // Obtener la ruta del archivo seleccionada
    rutaArchivo = selector.getSelectedFile().getCanonicalPath().replace("\\", "/");
    String url = "jdbc:sqlite:" + rutaArchivo;

    // Mostrar la ruta en el campo de texto
    jTextField1.setText(selector.getSelectedFile().getAbsolutePath());

    // Conectar a la base de datos
    System.out.println("Conectando a la base de datos en: " + url);
    Connection conn = DriverManager.getConnection(url);
    System.out.println("Conexión exitosa!");

    // Realizar operaciones con la base de datos aquí
    conn.close();

    } catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos: " + e.getMessage());
    } catch (Exception ex) {
    JOptionPane.showMessageDialog(this, "Error al abrir la base de datos: " + ex.getMessage());
    }
    }//GEN-LAST:event_ExaminarActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void Buscar_libroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Buscar_libroActionPerformed
    try {
        String titulo = Titulo.getText();
        Libro libro;
         if (dao==null){
        JOptionPane.showMessageDialog(this,"Debe abrir una base de datos.");
        return;
        }
        
        // Verificar si el campo de texto está vacío
        if (titulo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese un título a buscar.");
            return;
        }

        // Eliminar posibles espacios antes y después del título
        titulo = titulo.trim();
        
        // Buscar el libro en la base de datos
        libro = dao.buscarLibro(titulo);
        
        if (libro == null) {
            JOptionPane.showMessageDialog(this, "No se encontró el libro.");
        } else {
            // Si se encuentra el libro, mostrar el autor
            Autor.setText(libro.getAutor());
            Precio.setText(String.valueOf(libro.getPrecio()));
        }
    } catch (Exception ex) {
        // Mostrar el error en consola para depuración
        Logger.getLogger(Biblioteca.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Ocurrió un error al buscar el libro.");
    }
    
    habilitarBotones();
    }//GEN-LAST:event_Buscar_libroActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        Libro libro= new Libro();
        double precio;
        if (dao==null){
        JOptionPane.showMessageDialog(this,"Debe abrir una base de datos.");
        return;
        }
           
        try {
            libro.setTitulo(Titulo.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return;
        }
        try {
            libro.setAutor(Autor.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return;
        }
        
            try{
        precio = Double.valueOf(Precio.getText());
        } catch (Exception ex){
        JOptionPane.showMessageDialog(this, "El precio debe ser un numero");
        return;
        
        }
        try {
            libro.setPrecio(precio);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return;
        }
        
        
        try {
            dao.modificarLibro(libro);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            return;
        }
        JOptionPane.showMessageDialog(this,"El libro ha sido modificado.");
        borrarCampos();
        bloquearBotones();
    }//GEN-LAST:event_ModificarActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        borrarCampos();
        bloquearBotones();
    }//GEN-LAST:event_CancelarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       int respuesta = JOptionPane.showConfirmDialog(this, "Desea salir?","Salir",
              JOptionPane.YES_NO_OPTION);
       if(respuesta==JOptionPane.YES_OPTION){
           if(dao!=null){
               try {
                   dao.desconectar();
                }catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
               }
           }
           System.exit(0);
       }
       
    }//GEN-LAST:event_formWindowClosing

    private void PrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrecioActionPerformed
        
    private void borrarCampos() {
        Titulo.setText(null);
        Autor.setText(null);
        Precio.setText(null);
    }
    
    private void bloquearBotones() {
        Alta_libro.setEnabled(true);
        Buscar_libro.setEnabled(true);
        Borrar_libro.setEnabled(false);
        Modificar.setEnabled(false);
        Titulo.setEnabled(true);
        Cancelar.setVisible(false);
    }
    private void habilitarBotones() {
        Alta_libro.setEnabled(false);
        Buscar_libro.setEnabled(false);
        Borrar_libro.setEnabled(true);
        Modificar.setEnabled(true);
        Titulo.setEnabled(false);
        Cancelar.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Biblioteca().setVisible(true);
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alta_libro;
    private javax.swing.JLabel Archivo;
    private javax.swing.JTextField Autor;
    private javax.swing.JButton Borrar_libro;
    private javax.swing.JButton Buscar_libro;
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton Examinar;
    private javax.swing.JButton Modificar;
    private javax.swing.JTextField Precio;
    private javax.swing.JTextField Titulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}

   
    

